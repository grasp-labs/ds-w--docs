{
	"info": {
		"_postman_id": "134d6ab3-af31-47ea-afcd-cfedbc571b97",
		"name": "Workflows",
		"description": "**Workflows:**\n\n- Oauth Authorization\n    - Client_id\n    - Client_secret\n- Subscription\n    - Submit endpoint (Post data to GraspDP)\n- Workflows\n    - Create and setup workflows\n        - Create dataset definitions\n        - Create Linked Services\n        - Create Pipelines",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19479889",
		"_collection_link": "https://grasplabs.postman.co/workspace/Eviny-AS~71432491-dccd-403e-a39e-df74ee0e6e49/collection/19479889-134d6ab3-af31-47ea-afcd-cfedbc571b97?action=share&source=collection_link&creator=19479889"
	},
	"item": [
		{
			"name": "Subscription",
			"item": [
				{
					"name": "Submit",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"dataset_id\": \"string\",\r\n  \"data\": [\r\n    {}\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{SUBSCRIPTION_URL}}submit/",
							"host": [
								"{{SUBSCRIPTION_URL}}submit"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				}
			],
			"description": "Subcription related endpoints.\n\n- Submit\n    \n\nSubmit endpoints is built for receiving data from external sources. When posting data to submit we require two fields in body.\n\n1. dataset_id (string)\n2. data (List\\[Dict\\])\n    \n\nEx. body.\n\n{  \n\"dataset_id\": \"dadc196e-c90a-4d76-bad2-29536eb3f800\",  \n\"data\": \\[  \n{  \n\"first_name\": \"Jon\",  \n\"last_name\": \"Doe\"  \n},  \n{  \n\"first_name\": \"Jon\",  \n\"last_name\": \"Snow\"  \n}  \n\\]  \n}\n\nDataset ID will be defined and created once a dataset definition is in-place.\n\nData field is the input data from external source, data is required to be of type List\\[Dict\\].\n\nFurthermore - if a schema validation is defined in the dataset definition we will validate input data on schema defined in dataset definition."
		},
		{
			"name": "Pipelines",
			"item": [
				{
					"name": "pipeline",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "pipeline",
					"request": {
						"method": "POST",
						"header": []
					},
					"response": []
				},
				{
					"name": "pipeline",
					"request": {
						"method": "PUT",
						"header": []
					},
					"response": []
				},
				{
					"name": "pipeline",
					"request": {
						"method": "DELETE",
						"header": []
					},
					"response": []
				}
			],
			"description": "Endpoints for managing pipeline definitions.\n\n- Create pipeline.\n- Update pipeline.\n- Delete pipeline\n- Get pipeline"
		},
		{
			"name": "Datasets",
			"item": [
				{
					"name": "dataset",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "dataset",
					"request": {
						"method": "POST",
						"header": []
					},
					"response": []
				},
				{
					"name": "dataset",
					"request": {
						"method": "PUT",
						"header": []
					},
					"response": []
				},
				{
					"name": "dataset",
					"request": {
						"method": "DELETE",
						"header": []
					},
					"response": []
				}
			],
			"description": "Endpoints for managing datasets definitions.\n\n- Create dataset.\n- Update dataset.\n- Delete dataset\n- Get dataset"
		},
		{
			"name": "Linked Services",
			"item": [
				{
					"name": "linked service",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "linked service",
					"request": {
						"method": "POST",
						"header": []
					},
					"response": []
				},
				{
					"name": "linked service",
					"request": {
						"method": "PUT",
						"header": []
					},
					"response": []
				},
				{
					"name": "linked service",
					"request": {
						"method": "DELETE",
						"header": []
					},
					"response": []
				}
			],
			"description": "Endpoints for managing linked services definitions.\n\n- Create linked service.\n    \n- Update linked service.\n    \n- Delete linked service\n    \n- Get linked service"
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "clientSecret",
				"value": "{{CLIENT_SECRET}}",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "{{CLIENT_ID}}",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "{{OAUTH_TOKEN_URL}}",
				"type": "string"
			},
			{
				"key": "tokenName",
				"value": "identity_token",
				"type": "string"
			},
			{
				"key": "refreshRequestParams",
				"value": [],
				"type": "any"
			},
			{
				"key": "tokenRequestParams",
				"value": [],
				"type": "any"
			},
			{
				"key": "authRequestParams",
				"value": [],
				"type": "any"
			},
			{
				"key": "challengeAlgorithm",
				"value": "S256",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "client_credentials",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			},
			{
				"key": "client_authentication",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}
